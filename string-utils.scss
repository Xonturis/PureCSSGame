/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1)+$replace+str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function propagate($key, $keys, $map, $selector, $divisor, $level, $probalities) {
    @if (index($keys, $key) !=length($map)) {

        $selector: propagate(nth($keys, index($keys, $key)+1), $keys, $map, $selector, $divisor * 2, $level, $probalities);
    }

    $mod : pow(2, length($keys) - 1) / $divisor;
    $ref-counter : 1;

    @while $ref-counter<=$probalities {
        @each $cb-num in map-get($map, $key) {
            @if $cb-num {
                @for $time from 1 through $mod {
                    $selector : str-replace($selector, "//#{$key}#{$ref-counter}//", ".checkbox-#{$cb-num}-level-#{$level}:checked ~ ");
                    $ref-counter: $ref-counter + 1;
                }
            }
        }
    }


    @return $selector;
}