@import "string-utils";

@mixin setupVictory($secret, $level) {

    .victory-level-#{$level} {
        position: absolute;
        width: $victory-width;
        height: $victory-height;

        background: red;

        transform: translateX(calc(#{$container-width / 2} - #{$victory-width / 2})) translateY($victory-margin);
    }

    $number-of-inputs: length($secret);
    $supra-selector: "";
    $ors : ();

    @for $requirementno from 1 through $number-of-inputs {
        $value: nth($secret, $requirementno);

        @if ($value==0) {
            $supra-selector : $supra-selector+".checkbox-#{$requirementno}-level-#{$level}:not(:checked) ~ ";
        }

        @else if ($value==1) {
            $supra-selector : $supra-selector+".checkbox-#{$requirementno}-level-#{$level}:checked ~ ";
        }

        @else {
            @for $orno from $requirementno through $number-of-inputs {
                @if ($orno <=$number-of-inputs) {
                    @if nth($secret, $orno)==$value {
                        $list-of-ors: map-get($ors, $value);

                        @if not index($list-of-ors, $orno) {
                            @if not $list-of-ors {
                                $supra-selector: $supra-selector+"//#{$value}//";
                            }

                            $list-of-ors: append($list-of-ors, $orno, comma);
                            $ors: map-merge($ors, ($value : $list-of-ors));
                        }
                    }
                }
            }
        }
    }

    $supra-selector: $supra-selector+"//SELECTOR//";
    $or-selector: "";



    // ".checkbox-#{$or}-level-#{$level}:checked ~ "

    @if index(map-keys($ors), a) !=null {
        $supra-selector: $supra-selector+", ";
        $or-selector: "";
        $number-of-possibilities: length(map-get($ors, a)) - 1;

        @each $pair,
        $list in $ors {
            @if $pair !=a {
                $number-of-possibilities: $number-of-possibilities * (length($list) - 1);
            }
        }

        //           Supra Selector prepre format :
        // #{$supra-selector}
        //         possibilities :
        //         #{$number-of-possibilities}
        @for $poss from 1 through $number-of-possibilities {
            $temp-selector: $supra-selector;

            @each $val in map-keys($ors) {
                $temp-selector : str-replace($temp-selector, "//#{$val}//", "//#{$val}#{$poss}//")
            }

            $or-selector: $or-selector+$temp-selector;
        }

        //          Supra Selector pre format :
        // #{$or-selector}
        $s : a;
        $or-selector : propagate($s, map-keys($ors), $ors, $or-selector, 1, $level, $number-of-possibilities);

        //         keys : #{map-keys($ors)}
        //         key : #{$s}
        //         index : #{index(map-keys($ors), $s)}
        //         map-get : #{map-get($ors, a)}
        //         nthmap-get : #{nth(map-get($ors, a), 2)}
        //         length : #{length(map-keys($ors))}
        //         mod : #{pow(2, length(map-keys($ors)) - 1)}


        //         Supra Selector post format :
        // #{$or-selector}
    }

    @if $or-selector !="" {
        $or-selector: str-slice($or-selector, 1, length($or-selector) - 4);
        $supra-selector: $or-selector;
    }


    $supra-selector-victory : str-replace($supra-selector, "//SELECTOR//", "container level-#{$level}>.victory-level-#{$level}");
    $supra-selector-level : str-replace($supra-selector, "//SELECTOR//", "container wrapper-level-#{$level}");
    $supra-selector-next-level : str-replace($supra-selector, "//SELECTOR//", "container wrapper-level-#{$level + 1}");
    $supra-selector-header : str-slice($supra-selector, 1, length($supra-selector) - 17);

    /*#{$supra-selector-header}*/

    #{$supra-selector-level} {
        animation: 2s ease-in-out 1 disappear forwards !important;
    }

    #{$supra-selector-next-level} {
        display: inline;
        animation: 2s ease-in-out 1s 1 appear forwards;
    }

    #{$supra-selector-victory} {
        background-color: green;
    }

    #{$supra-selector-header} {
        counter-increment: score;
    }

}